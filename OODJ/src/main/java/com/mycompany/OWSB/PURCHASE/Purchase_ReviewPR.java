/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.OWSB.PURCHASE;

import com.mycompany.OWSB.ADMIN.Session;
import java.awt.BorderLayout;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author cindy
 */
public class Purchase_ReviewPR extends javax.swing.JPanel {
    private javax.swing.JPanel ChangePanel;

    /**
     * Creates new form Purchase_PR
     */
    public Purchase_ReviewPR(String prID, String itemFull, String quantity, String raisedBy, String date, String status, javax.swing.JPanel ChangePanel) {
        this.ChangePanel = ChangePanel;
        initComponents();
        
        PRID_TextField.setText(prID);
        Item_TextField.setText(itemFull);
        Quantity_TextField.setText(quantity);
        RaisedBy_TextField.setText(raisedBy);
        Date_TextField.setText(date);
        
        PRID_TextField.setEditable(false);
        Item_TextField.setEditable(false);
        RaisedBy_TextField.setEditable(false);
        Date_TextField.setEditable(false);
        
        String[] parts = itemFull.split("-", 2);
        String itemID = parts[0].trim();
        
        loadSuppliersForItem(itemID);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PR_Label = new javax.swing.JLabel();
        PRID_Label = new javax.swing.JLabel();
        Item_Label = new javax.swing.JLabel();
        Quantity_Label = new javax.swing.JLabel();
        Supplier_Label = new javax.swing.JLabel();
        RaisedBy_Label = new javax.swing.JLabel();
        Date_Label = new javax.swing.JLabel();
        PRID_TextField = new javax.swing.JTextField();
        Item_TextField = new javax.swing.JTextField();
        Quantity_TextField = new javax.swing.JTextField();
        Supplier_Dropdown = new javax.swing.JComboBox<>();
        RaisedBy_TextField = new javax.swing.JTextField();
        Date_TextField = new javax.swing.JTextField();
        BackButton = new javax.swing.JButton();
        CreateButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        PR_Label.setFont(new java.awt.Font("Comic Sans MS", 1, 30)); // NOI18N
        PR_Label.setText("Purchase Requisition");

        PRID_Label.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        PRID_Label.setText("PR ID:");

        Item_Label.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        Item_Label.setText("Item:");

        Quantity_Label.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        Quantity_Label.setText("Quantity:");

        Supplier_Label.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        Supplier_Label.setText("Supplier:");

        RaisedBy_Label.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        RaisedBy_Label.setText("Raised By:");

        Date_Label.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        Date_Label.setText("Required Delivery Date:");

        PRID_TextField.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N

        Item_TextField.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N

        Quantity_TextField.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N

        Supplier_Dropdown.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N

        RaisedBy_TextField.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N

        Date_TextField.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N

        BackButton.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        BackButton.setText("Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        CreateButton.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        CreateButton.setText("Create PO");
        CreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Quantity_Label)
                            .addComponent(Item_Label)
                            .addComponent(PRID_Label)
                            .addComponent(Date_Label)
                            .addComponent(RaisedBy_Label)
                            .addComponent(Supplier_Label)
                            .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Date_TextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                            .addComponent(RaisedBy_TextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Supplier_Dropdown, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Quantity_TextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Item_TextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PRID_TextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CreateButton)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(PR_Label)))
                .addGap(80, 80, 80))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(PR_Label)
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PRID_Label)
                    .addComponent(PRID_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Item_Label)
                    .addComponent(Item_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Quantity_Label)
                    .addComponent(Quantity_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Supplier_Label)
                    .addComponent(Supplier_Dropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RaisedBy_Label)
                    .addComponent(RaisedBy_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Date_Label)
                    .addComponent(Date_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CreateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(116, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void CreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateButtonActionPerformed
        // TODO add your handling code here:
        try {
            String newPOID = generateNextPOID();

            String itemFull = Item_TextField.getText();  // e.g. "ITM001-Jasmine Rice 5kg"
            String[] parts = itemFull.split("-", 2);
            String itemID = parts[0];
            String itemName = parts.length > 1 ? parts[1] : "";

            int quantity = Integer.parseInt(Quantity_TextField.getText());

            String supplierFull = (String) Supplier_Dropdown.getSelectedItem();  // e.g. "SUP001-Food (RM1.00)"
            String supplierID = supplierFull.split("-", 2)[0];

            String raisedBy = Session.getEmployeeID();
            String deliveryDate = Date_TextField.getText();

            // Extract unit price from supplier dropdown item (extract from string inside brackets)
            String unitPriceStr = supplierFull.substring(supplierFull.indexOf("(") + 1, supplierFull.indexOf(")")); // "RM1.00"
            double unitPrice = Double.parseDouble(unitPriceStr.replace("RM", ""));

            // Calculate total price and format
            double totalPrice = unitPrice * quantity;
            String totalPriceFormatted = String.format("%.2f", totalPrice);

            String newPOLine = String.join(";", newPOID, itemID, itemName, String.valueOf(quantity),totalPriceFormatted, supplierID, raisedBy, deliveryDate, "PENDING");

            appendLineToFile("PO_Lists.txt", newPOLine);

            // Update PR.txt status from PENDING to APPROVED for this PRID
            updatePRStatus(PRID_TextField.getText(), "APPROVED");

            JOptionPane.showMessageDialog(this, "Purchase Order created successfully!\nThe POID is " + newPOID);

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid integer quantity.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error creating PO: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        Purchase_PRLists PM_PRLists = new Purchase_PRLists(ChangePanel);

        ChangePanel.removeAll();
        ChangePanel.setLayout(new BorderLayout());
        ChangePanel.add(PM_PRLists, BorderLayout.CENTER);
        ChangePanel.revalidate();
        ChangePanel.repaint();
        
        
    }//GEN-LAST:event_CreateButtonActionPerformed

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        // TODO add your handling code here:
        Purchase_PRLists PM_PRLists = new Purchase_PRLists(ChangePanel);

        ChangePanel.removeAll();
        ChangePanel.setLayout(new BorderLayout());
        ChangePanel.add(PM_PRLists, BorderLayout.CENTER);
        ChangePanel.revalidate();
        ChangePanel.repaint();
    }//GEN-LAST:event_BackButtonActionPerformed

    
    private void loadSuppliersForItem(String itemID) {
        Supplier_Dropdown.removeAllItems();

        try (BufferedReader br = new BufferedReader(new FileReader("database/Supplier.txt"))) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] parts = line.split(";");
                if (parts.length >= 8) {
                    String supplierID = parts[0];
                    String supplierName = parts[1];
                    String itemInfo = parts[6]; // e.g., "ITM001: Jasmine Rice 5kg"
                    String unitPrice = parts[7];

                    // Match item ID
                    if (itemInfo.startsWith(itemID + ":")) {
                        String display = supplierID + "-" + supplierName + " (RM" + unitPrice + ")";
                        Supplier_Dropdown.addItem(display);
                    }
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    
    private String generateNextPOID() throws IOException {
        String lastID = "PO000"; // Default if file is empty
        try (BufferedReader br = new BufferedReader(new FileReader("PO_Lists.txt"))) {
            String line;
            while ((line = br.readLine()) != null) {
                if (!line.trim().isEmpty()) {
                    lastID = line.split(";")[0];
                }
            }
        } catch (IOException e) {
            e.printStackTrace(); // Log or handle error
        }

        // Extract number and increment
        int nextNum = Integer.parseInt(lastID.substring(2)) + 1;
        return String.format("PO%03d", nextNum);
    }

    private void appendLineToFile(String filename, String line) throws IOException {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(filename, true))) {
            writer.newLine();
            writer.write(line);
        }
    }

    private void updatePRStatus(String prid, String newStatus) throws IOException {
        Path path = Paths.get("database/PR.txt");
        List<String> lines = Files.readAllLines(path);

        for (int i = 0; i < lines.size(); i++) {
            String[] parts = lines.get(i).split(";");
            if (parts[0].equals(prid)) {
                parts[3] = newStatus;  // update Status column
                lines.set(i, String.join(";", parts));
                break;
            }
        }

        Files.write(path, lines);
    }

    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JButton CreateButton;
    private javax.swing.JLabel Date_Label;
    private javax.swing.JTextField Date_TextField;
    private javax.swing.JLabel Item_Label;
    private javax.swing.JTextField Item_TextField;
    private javax.swing.JLabel PRID_Label;
    private javax.swing.JTextField PRID_TextField;
    private javax.swing.JLabel PR_Label;
    private javax.swing.JLabel Quantity_Label;
    private javax.swing.JTextField Quantity_TextField;
    private javax.swing.JLabel RaisedBy_Label;
    private javax.swing.JTextField RaisedBy_TextField;
    private javax.swing.JComboBox<String> Supplier_Dropdown;
    private javax.swing.JLabel Supplier_Label;
    // End of variables declaration//GEN-END:variables
}
