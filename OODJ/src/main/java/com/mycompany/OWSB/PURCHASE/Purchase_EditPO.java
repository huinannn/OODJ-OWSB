/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.OWSB.PURCHASE;

import java.awt.BorderLayout;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;

/**
 *
 * @author cindy
 */
public class Purchase_EditPO extends javax.swing.JPanel {
    private javax.swing.JPanel ChangePanel;
    private String poID;
    private Map<String, Double> supplierPrices = new HashMap<>();

    /**
     * Creates new form Purchase_EditPO
     */
    public Purchase_EditPO(javax.swing.JPanel ChangePanel, String poID) {
        this.ChangePanel = ChangePanel;
        this.poID = poID;
        initComponents();
        
        POID_TextField.setEditable(false);
        ItemID_TextField.setEditable(false);
        ItemName_TextField.setEditable(false);
        RaisedBy_TextField.setEditable(false);
        Date_TextField.setEditable(false);
        
        loadPOData();
        loadSuppliers();
       
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        EditPO_Label = new javax.swing.JLabel();
        POID_Label = new javax.swing.JLabel();
        ItemID_Label = new javax.swing.JLabel();
        ItemName_Label = new javax.swing.JLabel();
        Quantity_Label = new javax.swing.JLabel();
        Supplier_Label = new javax.swing.JLabel();
        RaisedBy_Label = new javax.swing.JLabel();
        Date_Label = new javax.swing.JLabel();
        POID_TextField = new javax.swing.JTextField();
        ItemID_TextField = new javax.swing.JTextField();
        ItemName_TextField = new javax.swing.JTextField();
        Quantity_TextField = new javax.swing.JTextField();
        RaisedBy_TextField = new javax.swing.JTextField();
        Supplier_Dropdown = new javax.swing.JComboBox<>();
        Date_TextField = new javax.swing.JTextField();
        SaveButton = new javax.swing.JButton();
        BackButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(640, 600));

        EditPO_Label.setFont(new java.awt.Font("Comic Sans MS", 1, 30)); // NOI18N
        EditPO_Label.setText("Edit Purchase Order");

        POID_Label.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        POID_Label.setText("PO ID:");

        ItemID_Label.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        ItemID_Label.setText("Item ID:");

        ItemName_Label.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        ItemName_Label.setText("Item Name:");

        Quantity_Label.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        Quantity_Label.setText("Quantity:");

        Supplier_Label.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        Supplier_Label.setText("Supplier:");

        RaisedBy_Label.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        RaisedBy_Label.setText("Raised By:");

        Date_Label.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        Date_Label.setText("Required Delivery Date:");

        POID_TextField.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N

        ItemID_TextField.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        ItemID_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemID_TextFieldActionPerformed(evt);
            }
        });

        ItemName_TextField.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N

        Quantity_TextField.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N

        RaisedBy_TextField.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N

        Supplier_Dropdown.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N

        Date_TextField.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N

        SaveButton.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        SaveButton.setText("Save");
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });

        BackButton.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        BackButton.setText("Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addComponent(EditPO_Label))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(SaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(RaisedBy_Label)
                                .addGap(127, 127, 127)
                                .addComponent(RaisedBy_TextField))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Date_Label)
                                .addGap(18, 18, 18)
                                .addComponent(Date_TextField))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(POID_Label)
                                    .addComponent(ItemID_Label)
                                    .addComponent(ItemName_Label)
                                    .addComponent(Quantity_Label)
                                    .addComponent(Supplier_Label))
                                .addGap(115, 115, 115)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Quantity_TextField)
                                    .addComponent(ItemName_TextField)
                                    .addComponent(ItemID_TextField)
                                    .addComponent(POID_TextField)
                                    .addComponent(Supplier_Dropdown, 0, 300, Short.MAX_VALUE))))))
                .addGap(54, 54, 54))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(EditPO_Label)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(POID_Label)
                    .addComponent(POID_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ItemID_Label)
                    .addComponent(ItemID_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ItemName_Label)
                    .addComponent(ItemName_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Quantity_Label)
                    .addComponent(Quantity_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Supplier_Dropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Supplier_Label))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RaisedBy_Label)
                    .addComponent(RaisedBy_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Date_Label)
                    .addComponent(Date_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(100, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed
        // TODO add your handling code here:
        try {
            // Validate quantity
            int quantity;
            try {
                quantity = Integer.parseInt(Quantity_TextField.getText());
                if (quantity <= 0) {
                    JOptionPane.showMessageDialog(this, "Quantity must be positive", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Invalid quantity", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Get selected supplier and price
            String selectedSupplier = (String) Supplier_Dropdown.getSelectedItem();
            double unitPrice = supplierPrices.get(selectedSupplier);
            String supplierID = selectedSupplier.split("-")[0];
            double totalPrice = quantity * unitPrice;

            // Update PO in file
            updatePOInFile(quantity, supplierID, totalPrice);

            JOptionPane.showMessageDialog(this, "PO updated successfully");
            backToPOLists();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error saving PO: " + e.getMessage());
        }

    }//GEN-LAST:event_SaveButtonActionPerformed

    private void ItemID_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemID_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ItemID_TextFieldActionPerformed

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        // TODO add your handling code here:
        Purchase_POLists PM_POLists = new Purchase_POLists(ChangePanel);

        ChangePanel.removeAll();
        ChangePanel.setLayout(new BorderLayout());
        ChangePanel.add(PM_POLists, BorderLayout.CENTER);
        ChangePanel.revalidate();
        ChangePanel.repaint();
    }//GEN-LAST:event_BackButtonActionPerformed

    private void loadPOData() {
        try {
            List<PO> poList = PO.viewPOsInFile();
            for (PO po : poList) {
                if (po.getPOID().equals(poID)) {
                    POID_TextField.setText(po.getPOID());
                    ItemID_TextField.setText(po.getItemID());
                    ItemName_TextField.setText(po.getItemName());
                    Quantity_TextField.setText(String.valueOf(po.getQuantity()));
                    
                    // Set supplier dropdown to current supplier
                    String currentSupplier = po.getSupplierID();
                    for (int i = 0; i < Supplier_Dropdown.getItemCount(); i++) {
                        String item = Supplier_Dropdown.getItemAt(i);
                        if (item.contains(currentSupplier)) {
                            Supplier_Dropdown.setSelectedIndex(i);
                            break;
                        }
                    }
                    
                    RaisedBy_TextField.setText(po.getRaisedBy());
                    Date_TextField.setText(po.getDeliveryDate());
                    break;
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error loading PO data: " + e.getMessage());
        }
    }

    private void loadSuppliers() {
        Supplier_Dropdown.removeAllItems();
        try (BufferedReader br = new BufferedReader(new FileReader("database/Supplier.txt"))) {
            String line;
            br.readLine(); 
            while ((line = br.readLine()) != null) {
                line = line.trim();
                if (!line.isEmpty()) {
                    String[] parts = line.split(";");
                    if (parts.length >= 7) {
                        String supplierID = parts[0];
                        String supplierName = parts[1];
                        String itemID = parts[6].split(":")[0].trim();
                        
                        // Only show suppliers for this item
                        if (itemID.equals(ItemID_TextField.getText())) {
                            double unitPrice = parts.length >= 8 ? Double.parseDouble(parts[7]) : 0;
                            String displayText = supplierID + "-" + supplierName + " (RM" + unitPrice + ")";
                            Supplier_Dropdown.addItem(displayText);
                            supplierPrices.put(displayText, unitPrice);
                        }
                    }
                }
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error loading suppliers: " + e.getMessage());
        }
    }
    
    private void updatePOInFile(int quantity, String supplierID, double totalPrice) throws IOException {
        Path filePath = Paths.get("PO_Lists.txt");
        List<String> lines = Files.readAllLines(filePath);
        List<String> updatedLines = new ArrayList<>();

        for (String line : lines) {
            if (line.startsWith(poID + ";")) {
                String[] parts = line.split(";");
                // Update quantity, supplier, and total price
                parts[3] = String.valueOf(quantity);
                parts[4] = String.format("%.2f", totalPrice);
                parts[5] = supplierID;
                line = String.join(";", parts);
            }
            updatedLines.add(line);
        }

        Files.write(filePath, updatedLines, StandardOpenOption.TRUNCATE_EXISTING, StandardOpenOption.WRITE);
    }

    private void backToPOLists() {
        Purchase_POLists poLists = new Purchase_POLists(ChangePanel);
        ChangePanel.removeAll();
        ChangePanel.setLayout(new BorderLayout());
        ChangePanel.add(poLists, BorderLayout.CENTER);
        ChangePanel.revalidate();
        ChangePanel.repaint();
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JLabel Date_Label;
    private javax.swing.JTextField Date_TextField;
    private javax.swing.JLabel EditPO_Label;
    private javax.swing.JLabel ItemID_Label;
    private javax.swing.JTextField ItemID_TextField;
    private javax.swing.JLabel ItemName_Label;
    private javax.swing.JTextField ItemName_TextField;
    private javax.swing.JLabel POID_Label;
    private javax.swing.JTextField POID_TextField;
    private javax.swing.JLabel Quantity_Label;
    private javax.swing.JTextField Quantity_TextField;
    private javax.swing.JLabel RaisedBy_Label;
    private javax.swing.JTextField RaisedBy_TextField;
    private javax.swing.JButton SaveButton;
    private javax.swing.JComboBox<String> Supplier_Dropdown;
    private javax.swing.JLabel Supplier_Label;
    // End of variables declaration//GEN-END:variables
}
