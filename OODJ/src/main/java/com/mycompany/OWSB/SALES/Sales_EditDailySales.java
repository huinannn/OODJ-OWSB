/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.OWSB.SALES;

import java.awt.BorderLayout;
import java.time.LocalDate;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author xiaochingloh
 */
public class Sales_EditDailySales extends javax.swing.JPanel {
    private javax.swing.JPanel ChangePanel;
    private DailySales dailySales;
    /**
     * Creates new form Sales_EditDailySales
     */
    public Sales_EditDailySales(String DSID, javax.swing.JPanel ChangePanel) {
        initComponents();
        this.ChangePanel = ChangePanel;
        
        //Generate list of items
        showItemComboBox();
        
        //Load PR details
        this.dailySales = DailySales.getDSByID(DSID);
        System.out.println("Edit DS: " + DSID);
        if(dailySales != null){
            salesID.setText(DSID);
            salesID.setEditable(false);
            salesID.setBorder(null);
            for (int i = 0; i < item.getItemCount(); i++){
                String comboItem = item.getItemAt(i);
                if (comboItem.startsWith(dailySales.getItemCode() + ":")){
                    item.setSelectedIndex(i);
                    break;
                }
            }
            quantity.setText(String.valueOf(dailySales.getQuantitySold()));
            date.setText(String.valueOf(dailySales.getDate()));
            title.setText(dailySales.getSalesID());
        } else {
            JOptionPane.showMessageDialog(null, "Sales not found.");
        }
    }
    
    private void showItemComboBox(){
        //Clear all items in combo box
        item.removeAllItems();
        item.addItem("Please Select an Item!");
        
        List<Items> allItems = Sales_AddItem.viewItemsInFile();
        if (allItems != null && !allItems.isEmpty()){
            for (Items i : allItems){
                if (i != null){
                    String itemCode = i.getItemCode();
                    String itemName = i.getItemName();
                    item.addItem(itemCode + ": " + itemName);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "No items found in inventory.", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        date_label = new javax.swing.JLabel();
        date = new javax.swing.JLabel();
        quantity = new javax.swing.JTextField();
        back = new javax.swing.JButton();
        add = new javax.swing.JButton();
        salesID = new javax.swing.JTextField();
        title = new javax.swing.JLabel();
        salesID_label = new javax.swing.JLabel();
        itemName_label = new javax.swing.JLabel();
        quantity_label = new javax.swing.JLabel();
        item = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(255, 255, 255));

        date_label.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        date_label.setText("DATE");

        date.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        date.setText("date");

        quantity.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        quantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityActionPerformed(evt);
            }
        });

        back.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        add.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        add.setText("Save");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        salesID.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        salesID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salesIDActionPerformed(evt);
            }
        });

        title.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        title.setText("DAILY ITEM-WISE SALES");

        salesID_label.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        salesID_label.setText("DAILY SALES ID");

        itemName_label.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        itemName_label.setText("ITEM*");

        quantity_label.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        quantity_label.setText("QUANTITY SOLD*");

        item.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please Select an Item!"}));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(salesID_label)
                    .addComponent(itemName_label)
                    .addComponent(quantity_label))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(quantity)
                    .addComponent(salesID)
                    .addComponent(item, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(105, 105, 105))
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(title)
                .addGap(30, 241, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(back)
                        .addGap(36, 36, 36)
                        .addComponent(add)
                        .addGap(31, 31, 31))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(date_label)
                        .addGap(18, 18, 18)
                        .addComponent(date)
                        .addGap(32, 32, 32))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(title)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(date)
                    .addComponent(date_label))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salesID_label)
                    .addComponent(salesID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemName_label)
                    .addComponent(item, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quantity_label)
                    .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(back)
                    .addComponent(add))
                .addContainerGap(262, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void quantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityActionPerformed

    }//GEN-LAST:event_quantityActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        Sales_DailySales ds = new Sales_DailySales(ChangePanel);

        ChangePanel.removeAll();
        ChangePanel.setLayout(new BorderLayout());
        ChangePanel.add(ds, BorderLayout.CENTER);
        ChangePanel.revalidate();
        ChangePanel.repaint();
    }//GEN-LAST:event_backActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        //Empty Fields, not allowed to submit
        if (item.getSelectedIndex() == 0|| quantity.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please fill in all required fields!", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        //Validate Quantity Sold
        String quantityInput = quantity.getText().trim();
        if(!quantityInput.matches("^\\d{1,4}$")){
            JOptionPane.showMessageDialog(this, "Please enter a valid quantity! (Max 4 digits)", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String DSID = salesID.getText();
        String itemDetail = item.getSelectedItem().toString();
        String itemCode = itemDetail.split(":")[0].trim();
        int quantity_given = Integer.parseInt(quantityInput);
        LocalDate date_given = LocalDate.parse(date.getText());

        DailySales new_ds = new DailySales(DSID, itemCode, quantity_given, date_given);

        DailySales.editDSInFile(DSID, new_ds);

        //Back to Daily Sales table
        Sales_DailySales d = new Sales_DailySales(ChangePanel);

        ChangePanel.removeAll();
        ChangePanel.setLayout(new BorderLayout());
        ChangePanel.add(d, BorderLayout.CENTER);
        ChangePanel.revalidate();
        ChangePanel.repaint();
    }//GEN-LAST:event_addActionPerformed

    private void salesIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salesIDActionPerformed

    }//GEN-LAST:event_salesIDActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton back;
    private javax.swing.JLabel date;
    private javax.swing.JLabel date_label;
    private javax.swing.JComboBox<String> item;
    private javax.swing.JLabel itemName_label;
    private javax.swing.JTextField quantity;
    private javax.swing.JLabel quantity_label;
    private javax.swing.JTextField salesID;
    private javax.swing.JLabel salesID_label;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
