/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.OWSB.PURCHASE;

import com.mycompany.OWSB.ADMIN.Session;
import java.awt.BorderLayout;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author cindy
 */
public class Purchase_CreatePO extends javax.swing.JPanel {
    private javax.swing.JPanel ChangePanel;

    /**
     * Creates new form Purchase_CreatePO
     */
    public Purchase_CreatePO(javax.swing.JPanel ChangePanel) {
        this.ChangePanel = ChangePanel;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CreatePO_Label = new javax.swing.JLabel();
        ItemName_Label = new javax.swing.JLabel();
        Quantity_Label = new javax.swing.JLabel();
        SupplierName_Label = new javax.swing.JLabel();
        ItemName_TextField = new javax.swing.JTextField();
        Quantity_TextField = new javax.swing.JTextField();
        Supplier_Dropdown = new javax.swing.JComboBox<>();
        CheckButton = new javax.swing.JButton();
        CreateButton = new javax.swing.JButton();
        Date_Label = new javax.swing.JLabel();
        Date_TextField = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));

        CreatePO_Label.setFont(new java.awt.Font("Comic Sans MS", 1, 30)); // NOI18N
        CreatePO_Label.setText("Create New Purchase Order (PO)");

        ItemName_Label.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        ItemName_Label.setText("Item Name:");

        Quantity_Label.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        Quantity_Label.setText("Quantity:");

        SupplierName_Label.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        SupplierName_Label.setText("Supplier Name:");

        ItemName_TextField.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N

        Quantity_TextField.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N

        Supplier_Dropdown.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        Supplier_Dropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Supplier_DropdownActionPerformed(evt);
            }
        });

        CheckButton.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        CheckButton.setText("Check Items & Load Suppliers");
        CheckButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckButtonActionPerformed(evt);
            }
        });

        CreateButton.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        CreateButton.setText("Create");
        CreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateButtonActionPerformed(evt);
            }
        });

        Date_Label.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        Date_Label.setText("Required Delivery Date:");

        Date_TextField.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        Date_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Date_TextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CreatePO_Label)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Quantity_Label)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(ItemName_Label)
                                    .addGap(67, 67, 67))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(SupplierName_Label)
                                    .addGap(37, 37, 37)))
                            .addComponent(Date_Label))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(CheckButton)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(Supplier_Dropdown, javax.swing.GroupLayout.Alignment.TRAILING, 0, 309, Short.MAX_VALUE)
                                        .addComponent(Quantity_TextField, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(ItemName_TextField, javax.swing.GroupLayout.Alignment.TRAILING))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CreateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Date_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(52, 52, 52))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(CreatePO_Label)
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ItemName_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Quantity_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(CheckButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Supplier_Dropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ItemName_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Quantity_Label)
                        .addGap(126, 126, 126)
                        .addComponent(SupplierName_Label)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Date_Label)
                    .addComponent(Date_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(76, 76, 76)
                .addComponent(CreateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(130, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void CheckButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckButtonActionPerformed
        // TODO add your handling code here:
        checkItemAndLoadSuppliers(evt);
    }//GEN-LAST:event_CheckButtonActionPerformed

    private void Supplier_DropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Supplier_DropdownActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Supplier_DropdownActionPerformed

    private void CreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateButtonActionPerformed
        // TODO add your handling code here:
        String itemName = ItemName_TextField.getText();
        String quantity = Quantity_TextField.getText();
        String supplierName = Supplier_Dropdown.getSelectedItem().toString();
        String purchaseManagerID = Session.getEmployeeID(); 
        String deliveryDate = Date_TextField.getText();
        
        if (!deliveryDate.matches("\\d{2}-\\d{2}-\\d{4}")) {
            JOptionPane.showMessageDialog(this, "Please enter the required delivery date in dd-MM-yyyy format.");
            return;
        }

        Purchase_PO poPanel = new Purchase_PO(ChangePanel,itemName, quantity, supplierName, purchaseManagerID, deliveryDate);
        ChangePanel.removeAll();
        ChangePanel.setLayout(new BorderLayout());
        ChangePanel.add(poPanel, BorderLayout.CENTER);
        ChangePanel.revalidate();
        ChangePanel.repaint();
    }//GEN-LAST:event_CreateButtonActionPerformed

    private void Date_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Date_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Date_TextFieldActionPerformed

    private void checkItemAndLoadSuppliers(java.awt.event.ActionEvent evt) {
        String enteredItem = ItemName_TextField.getText().trim();
        String quantity = Quantity_TextField.getText().trim();

        if (enteredItem.isEmpty() || quantity.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter both item name and quantity.");
            return;
        }

        String itemId = null;

        // 1. Validate item exists in Items.txt
        try (BufferedReader br = new BufferedReader(new FileReader("Items.txt"))) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] parts = line.split(";");
                if (parts.length >= 2 && parts[1].equalsIgnoreCase(enteredItem)) {
                    itemId = parts[0].trim();
                    break;
                }
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error reading Items.txt: " + e.getMessage());
            return;
        }

        if (itemId == null) {
            JOptionPane.showMessageDialog(this, "Item not found. Please enter a valid item name.");
            return;
        }

        // 2. Load suppliers for the item
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        try (BufferedReader br = new BufferedReader(new FileReader("Suppliers.txt"))) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] parts = line.split(";");
                if (parts.length >= 7) {
                    String supplierID = parts[0].trim();
                    String supplierName = parts[1].trim();
                    String itemData = parts[6].trim(); 

                    if (itemData.contains(":")){
                        String supplierItemId = itemData.split(":")[0].trim();
                        if (supplierItemId.equalsIgnoreCase(itemId)){
                            model.addElement(supplierID + "-" + supplierName);
                        }
                    }
                }
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error reading Suppliers.txt: " + e.getMessage());
            return;
        }

        if (model.getSize() == 0) {
            JOptionPane.showMessageDialog(this, "No suppliers found for this item.");
        }

        Supplier_Dropdown.setModel(model);
    }
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CheckButton;
    private javax.swing.JButton CreateButton;
    private javax.swing.JLabel CreatePO_Label;
    private javax.swing.JLabel Date_Label;
    private javax.swing.JTextField Date_TextField;
    private javax.swing.JLabel ItemName_Label;
    private javax.swing.JTextField ItemName_TextField;
    private javax.swing.JLabel Quantity_Label;
    private javax.swing.JTextField Quantity_TextField;
    private javax.swing.JLabel SupplierName_Label;
    private javax.swing.JComboBox<String> Supplier_Dropdown;
    // End of variables declaration//GEN-END:variables
}
