/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.OWSB.ADMIN;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Font;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Files;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.DefaultCellEditor;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author cindy
 */
public class Admin_DisplayUsers extends javax.swing.JPanel {
    private javax.swing.JPanel ChangePanel;
    private DefaultTableModel Table_Model;
    
    /**
     * Creates new form Admin_DisplayUsers
     */
    public Admin_DisplayUsers(javax.swing.JPanel ChangePanel) {
        this.ChangePanel = ChangePanel;
        initComponents();
        
        Setup_Table();
        Show_Users();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        UserList_Label = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        AllUsers_Table = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));

        UserList_Label.setFont(new java.awt.Font("Comic Sans MS", 1, 30)); // NOI18N
        UserList_Label.setText("User List");

        AllUsers_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(AllUsers_Table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 602, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(UserList_Label)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(UserList_Label)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void Setup_Table() {
        Table_Model = new DefaultTableModel(new String[]{"Employee ID", "Username", "Password", "Attempts", "Status", "Edit", "Delete"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return column == 5 || column == 6; // Edit and Delete columns only
            }
        };
        
        // Set row height
        AllUsers_Table.setRowHeight(25);
        
        // Set table design
        AllUsers_Table.setFont(new Font("Georgia", Font.PLAIN, 14)); // Change table font
        AllUsers_Table.getTableHeader().setFont(new Font("Georgia", Font.BOLD, 12)); // Change header font
//        AllUsers_Table.setFont(new Font("Georgia", Font.PLAIN, 16));
        
        AllUsers_Table.setModel(Table_Model);
        
        TableColumnModel Column_Width = AllUsers_Table.getColumnModel();
    
        Column_Width.getColumn(0).setPreferredWidth(170); // Employee ID
        Column_Width.getColumn(1).setPreferredWidth(170); // Username
        Column_Width.getColumn(2).setPreferredWidth(170); // Password
        Column_Width.getColumn(3).setPreferredWidth(110);  // Attempts
        Column_Width.getColumn(4).setPreferredWidth(100); // Status
        Column_Width.getColumn(5).setPreferredWidth(80);  // Edit
        Column_Width.getColumn(6).setPreferredWidth(90);  // Delete

        
        
        AllUsers_Table.getColumn("Edit").setCellRenderer(new ButtonRenderer("Edit"));
        AllUsers_Table.getColumn("Edit").setCellEditor(new ButtonEditor(new JCheckBox()));
        
        AllUsers_Table.getColumn("Delete").setCellRenderer(new ButtonRenderer("Delete"));
        AllUsers_Table.getColumn("Delete").setCellEditor(new ButtonEditor(new JCheckBox()));
    }
    
    private void Show_Users() {
        try (BufferedReader reader = new BufferedReader(new FileReader("login.txt"))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] data = line.split(",");
                if (data.length >= 5) {
                    Table_Model.addRow(new Object[]{data[0], data[1], data[2], data[3], data[4], "Edit", "Delete"});
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    
    class ButtonRenderer extends JButton implements TableCellRenderer {
        public ButtonRenderer(String label) {
            setText(label);
            setFont(new Font("Georgia", Font.PLAIN, 12));
        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            setText((value == null) ? "" : value.toString());
            return this;
        }
    }

    class ButtonEditor extends DefaultCellEditor {
        private final JButton button;
        private String label;
        private boolean isClicked;
        private JTable table;

        public ButtonEditor(JCheckBox checkBox) {
            super(checkBox);
            button = new JButton();
            button.addActionListener(e -> fireEditingStopped());
        }

        @Override
        public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
            this.table = table;
            this.label = (value == null) ? "" : value.toString();
            button.setText(label);
            isClicked = true;
            return button;
        }

        @Override
        public Object getCellEditorValue() {
            if (isClicked && table != null) {
                int selectedRow = table.getSelectedRow();
                String employeeId = table.getValueAt(selectedRow, 0).toString();

                if ("Edit".equals(label)) {
                    int rowIndex = table.getEditingRow();
                    String selectedEmployeeId = table.getValueAt(rowIndex, 0).toString();
                    Admin_EditUsers ADeditUser = new Admin_EditUsers(ChangePanel, selectedEmployeeId);
        
                    ChangePanel.removeAll();
                    ChangePanel.setLayout(new BorderLayout());
                    ChangePanel.add(ADeditUser, BorderLayout.CENTER);
                    ChangePanel.revalidate();
                    ChangePanel.repaint();
                } else if ("Delete".equals(label)) {
                    deleteUserFromFile(employeeId);

                    SwingUtilities.invokeLater(() -> {
                        ((DefaultTableModel) table.getModel()).removeRow(selectedRow);
                        JOptionPane.showMessageDialog(button, "User deleted successfully.");
                    });
                    
                }
            }
            isClicked = false;
            return label;
        }
        
        @Override
        public boolean stopCellEditing() {
            isClicked = false;
            return super.stopCellEditing();
        }
        
        private void deleteUserFromFile(String employeeId) {
            File inputFile = new File("login.txt");

            try {
                // Read all lines into a list
                List<String> lines = Files.readAllLines(inputFile.toPath());

                // Filter out the line with the employeeId
                List<String> updatedLines = lines.stream()
                    .filter(line -> !line.startsWith(employeeId + ","))
                    .collect(Collectors.toList());

                // Overwrite the original file with filtered lines
                Files.write(inputFile.toPath(), updatedLines);
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }    
    
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable AllUsers_Table;
    private javax.swing.JLabel UserList_Label;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
