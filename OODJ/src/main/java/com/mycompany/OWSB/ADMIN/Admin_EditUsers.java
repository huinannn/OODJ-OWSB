/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.OWSB.ADMIN;

import java.awt.BorderLayout;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import javax.swing.JOptionPane;

/**
 *
 * @author cindy
 */
public class Admin_EditUsers extends javax.swing.JPanel {
    private javax.swing.JPanel ChangePanel;
    private String employeeId;
    private List<String> User_Records = new ArrayList<>();
    private String file = "login.txt";

    /**
     * Creates new form Admin_EditUsers
     */
    public Admin_EditUsers(javax.swing.JPanel ChangePanel, String employeeId) {
        this.ChangePanel = ChangePanel;
        this.employeeId = employeeId;
        initComponents();
        Show_UserData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        EditUser_Label = new javax.swing.JLabel();
        empID_Label = new javax.swing.JLabel();
        Username_Label = new javax.swing.JLabel();
        Password_Label = new javax.swing.JLabel();
        Attempts_Label = new javax.swing.JLabel();
        Status_Label = new javax.swing.JLabel();
        empID_TextField = new javax.swing.JTextField();
        Username_TextField = new javax.swing.JTextField();
        Password_TextField = new javax.swing.JTextField();
        Attempts_TextField = new javax.swing.JTextField();
        Status_Dropdown = new javax.swing.JComboBox<>();
        BackButton = new javax.swing.JButton();
        SaveButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        EditUser_Label.setFont(new java.awt.Font("Comic Sans MS", 1, 36)); // NOI18N
        EditUser_Label.setText("Edit User Details");

        empID_Label.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        empID_Label.setText("Employee ID:");

        Username_Label.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        Username_Label.setText("Username:");

        Password_Label.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        Password_Label.setText("Password:");

        Attempts_Label.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        Attempts_Label.setText("Attempts");

        Status_Label.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        Status_Label.setText("Status:");

        empID_TextField.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N

        Username_TextField.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        Username_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Username_TextFieldActionPerformed(evt);
            }
        });

        Password_TextField.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N

        Attempts_TextField.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N

        Status_Dropdown.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        Status_Dropdown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "lock", "unlock" }));

        BackButton.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        BackButton.setText("Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        SaveButton.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        SaveButton.setText("Save");
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Username_Label)
                            .addComponent(empID_Label)
                            .addComponent(Password_Label)
                            .addComponent(Attempts_Label)
                            .addComponent(Status_Label)
                            .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(Attempts_TextField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(Password_TextField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(Username_TextField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(empID_TextField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(Status_Dropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(SaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addComponent(EditUser_Label)))
                .addContainerGap(103, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(EditUser_Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(empID_Label)
                    .addComponent(empID_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Username_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Username_Label))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Password_Label)
                    .addComponent(Password_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Attempts_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Attempts_Label))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Status_Label)
                    .addComponent(Status_Dropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(126, 126, 126))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void Username_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Username_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Username_TextFieldActionPerformed

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        // TODO add your handling code here:
        Admin_DisplayUsers ADdisplay = new Admin_DisplayUsers(ChangePanel);
        
        ChangePanel.removeAll();
        ChangePanel.setLayout(new BorderLayout());
        ChangePanel.add(ADdisplay, BorderLayout.CENTER);
        ChangePanel.revalidate();
        ChangePanel.repaint();
    }//GEN-LAST:event_BackButtonActionPerformed

    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed
        // TODO add your handling code here:
        String username = Username_TextField.getText().trim();
        String password = Password_TextField.getText().trim();
        String attemptsStr = Attempts_TextField.getText().trim();
        String status = Objects.requireNonNull(Status_Dropdown.getSelectedItem()).toString();

        if (username.isEmpty() || password.isEmpty() || attemptsStr.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Fields cannot be empty!", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!attemptsStr.matches("\\d+")) {
            JOptionPane.showMessageDialog(this, "Attempts must be an integer!", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int attempts = Integer.parseInt(attemptsStr);
        Update_User(username, password, attempts, status);
        
        Admin_DisplayUsers ADdisplay = new Admin_DisplayUsers(ChangePanel);
        
        ChangePanel.removeAll();
        ChangePanel.setLayout(new BorderLayout());
        ChangePanel.add(ADdisplay, BorderLayout.CENTER);
        ChangePanel.revalidate();
        ChangePanel.repaint();
    }//GEN-LAST:event_SaveButtonActionPerformed

    
    private void Load_UserData() {
    User_Records.clear(); // Clear before loading
    try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
        String line;
        while ((line = reader.readLine()) != null) {
            User_Records.add(line);
        }
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error reading file", "Error", JOptionPane.ERROR_MESSAGE);
    }
}
    
    
    private void Show_UserData() {
        Load_UserData(); // Ensure User_Records is updated

        for (String record : User_Records) {
            String[] sec = record.split(",");
            if (sec.length == 5 && sec[0].equals(employeeId)) {
                empID_TextField.setText(sec[0]);
                Username_TextField.setText(sec[1]);
                Password_TextField.setText(sec[2]);
                Attempts_TextField.setText(sec[3]);
                Status_Dropdown.setSelectedItem(sec[4]);
                break;
            }
        }
        empID_TextField.setEditable(false);
    }
    
    private void Update_User(String username, String password, int attempts, String status) {
        Load_UserData();
        List<String> Updated_Records = new ArrayList<>();

        for (String record : User_Records) {
            String[] parts = record.split(",");
            if (parts[0].equals(employeeId)) {
                Updated_Records.add(employeeId + "," + username + "," + password + "," + attempts + "," + status);
            } else {
                Updated_Records.add(record);
            }
        }
        
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(file, false))) {
            for (String updatedRecord : Updated_Records) {
            writer.write(updatedRecord);
            writer.newLine();
            }
            writer.flush();
            JOptionPane.showMessageDialog(this, "User details updated successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error updating file", "Error", JOptionPane.ERROR_MESSAGE);
        }
        Load_UserData();
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Attempts_Label;
    private javax.swing.JTextField Attempts_TextField;
    private javax.swing.JButton BackButton;
    private javax.swing.JLabel EditUser_Label;
    private javax.swing.JLabel Password_Label;
    private javax.swing.JTextField Password_TextField;
    private javax.swing.JButton SaveButton;
    private javax.swing.JComboBox<String> Status_Dropdown;
    private javax.swing.JLabel Status_Label;
    private javax.swing.JLabel Username_Label;
    private javax.swing.JTextField Username_TextField;
    private javax.swing.JLabel empID_Label;
    private javax.swing.JTextField empID_TextField;
    // End of variables declaration//GEN-END:variables
}
